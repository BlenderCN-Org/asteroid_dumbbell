from __future__ import absolute_import, division, print_function, unicode_literals
import numpy as np
import utilities

class TestIsmember():
    e1 = np.array([
        [0.1699,  -0.5125,    0.1174],
       [ 0.9061 ,   0.1447,   -0.0347],
       [ 0.3551 ,   0.0509,    0.0354],
       [-0.0084 ,  -0.0043,    0.2267],
       [-0.1699 ,   0.5125,   -0.1174],
       [-0.2387 ,   0.7701,    0.0069],
       [ 0.4116 ,  -0.0502,    0.1015],
       [-0.4111 ,  -0.0607,    0.6044],
       [ 0.2265 ,  -0.0626,   -0.4776],
       [ 0.4234 ,   0.1950,   -0.1898],
       [ 0.3488 ,  -0.3244,   -0.0425],
       [ 0.5354 ,   0.1438,    0.3628],
       [-0.3187 ,  -0.2292,   -0.0676],
       [ 0.1753 ,  -0.4015,   -0.5248],
       [ 0.3103 ,   0.2250,    0.2943],
       [-0.8864 ,  -0.0124,   -0.3669],
       [-0.1223 ,   0.2617,   -0.4351],
       [ 0.2471 ,  -0.1577,    0.0844],
       [-0.1753 ,   0.4015,    0.5248],
       [-0.4116 ,   0.0502,   -0.1015],
       [-0.4234 ,  -0.1950,    0.1898],
       [ 0.2387 ,  -0.7701,   -0.0069],
       [ 0.6881 ,  -0.3969,   -0.0197],
       [ 0.1721 ,  -0.0545,   -0.1507],
       [ 0.9202 ,   0.0801,   -0.2273],
       [-0.3375 ,  -0.4851,    0.0503],
       [ 0.3375 ,   0.4851,   -0.0503],
       [ 0.2229 ,   0.1466,   -0.0616],
       [ 1.0076 ,   0.1585,    0.1287],
       [ 0.2390 ,  -0.4270,   -0.0119],
       [ 0.5677 ,  -0.2169,    0.2993],
       [ 0.2116 ,   0.4595,    0.1278]])

    e1_ind1a = np.array([
         1,
         0,
         0,
         0,
         1,
         1,
         1,
         0,
         0,
         1,
         0,
         0,
         0,
         1,
         0,
         0,
         0,
         0,
         1,
         1,
         1,
         1,
         0,
         0,
         0,
         1,
         1,
         0,
         0,
         0,
         0,
         0])

    e1_ind1b = np.array([
         5,
         0,
         0,
         0,
         1,
        22,
        20,
         0,
         0,
        21,
         0,
         0,
         0,
        19,
         0,
         0,
         0,
         0,
        14,
         7,
        10,
         6,
         0,
         0,
         0,
        27,
        26,
         0,
         0,
         0,
         0,
         0])

    def test_ismember_rows(self):
        indx = utilities.ismember_rows(-self.e1, self.e1)
        np.testing.assert_allclose(indx, self.e1_ind1b-1)

    def test_ismember_index(self):
        indx = utilities.ismember_index(-self.e1,self.e1)

        np.testing.assert_allclose(indx, self.e1_ind1b -1)
    

class TestIsmember_256():
    e1 = np.array([
    [ 0.0778  , -0.3455 ,   0.0429],
    [ 0.1429  , -0.0011 ,   0.0094],
    [-0.1633  , -0.0545 ,   0.0419],
    [ 0.3764  ,  0.1353 ,   0.0908],
    [ 0.2022  , -0.1046 ,  -0.0197],
    [ 0.0080  , -0.1840 ,   0.0059],
    [ 0.0921  , -0.1670 ,   0.0746],
    [ 0.2507  ,  0.0698 ,  -0.1657],
    [ 0.2089  ,  0.0960 ,  -0.0297],
    [ 0.0211  , -0.0459 ,   0.1567],
    [ 0.0062  , -0.1552 ,  -0.1115],
    [-0.1603  , -0.0051 ,   0.0652],
    [-0.2282  ,  0.2349 ,   0.0081],
    [-0.0547  ,  0.1220 ,   0.0059],
    [ 0.0154  , -0.0792 ,   0.0388],
    [ 0.2267  , -0.0205 ,   0.0430],
    [ 0.0373  ,  0.2181 ,  -0.0842],
    [-0.2415  , -0.1624 ,   0.1286],
    [ 0.2452  ,  0.0469 ,  -0.0255],
    [ 0.0544  , -0.2118 ,   0.0133],
    [-0.0389  ,  0.0724 ,  -0.0042],
    [-0.2761  ,  0.1399 ,  -0.1764],
    [-0.1463  ,  0.0451 ,  -0.0651],
    [ 0.2415  ,  0.1624 ,  -0.1286],
    [-0.1233  , -0.0535 ,  -0.0499],
    [-0.0264  , -0.0833 ,  -0.0007],
    [-0.1241  ,  0.0682 ,   0.0573],
    [ 0.2224  , -0.0036 ,  -0.1028],
    [ 0.0562  ,  0.2769 ,   0.0505],
    [ 0.1649  , -0.0376 ,  -0.1001],
    [ 0.3180  , -0.2019 ,  -0.1206],
    [-0.3174  ,  0.0400 ,  -0.0274],
    [ 0.0800  , -0.1860 ,  -0.0723],
    [ 0.0547  , -0.1220 ,  -0.0059],
    [-0.1858  ,  0.1202 ,   0.0478],
    [ 0.0268  , -0.0546 ,  -0.0716],
    [-0.1495  ,  0.2119 ,  -0.0013],
    [ 0.1847  ,  0.1783 ,  -0.0095],
    [-0.4824  , -0.0182 ,   0.0350],
    [ 0.2068  , -0.1124 ,   0.2590],
    [ 0.0598  , -0.0801 ,  -0.0859],
    [ 0.1482  ,  0.2242 ,   0.0138],
    [ 0.5143  , -0.0247 ,  -0.0345],
    [-0.0690  , -0.0631 ,   0.0375],
    [-0.0244  , -0.1670 ,  -0.3675],
    [ 0.1645  , -0.0328 ,  -0.0075],
    [ 0.0396  ,  0.0974 ,   0.0121],
    [-0.1469  , -0.0189 ,   0.1650],
    [ 0.0306  , -0.1389 ,   0.0281],
    [ 0.1469  ,  0.0189 ,  -0.1650],
    [-0.0542  ,  0.0984 ,   0.2243],
    [ 0.1257  ,  0.2373 ,   0.4607],
    [-0.0376  ,  0.0004 ,  -0.0775],
    [-0.1511  ,  0.1139 ,   0.1093],
    [ 0.1502  , -0.0193 ,   0.0258],
    [-0.1501  , -0.1602 ,  -0.1076],
    [-0.0686  ,  0.1224 ,   0.4350],
    [-0.0410  ,  0.0941 ,  -0.1939],
    [ 0.1042  ,  0.0370 ,  -0.2581],
    [ 0.1081  , -0.1117 ,  -0.0111],
    [-0.2507  , -0.0698 ,   0.1657],
    [-0.1150  , -0.1405 ,  -0.0260],
    [ 0.2080  ,  0.0018 ,  -0.0007],
    [-0.0361  , -0.1016 ,  -0.0547],
    [-0.0057  , -0.0912 ,  -0.1772],
    [-0.4470  , -0.0107 ,  -0.0012],
    [ 0.1213  ,  0.0641 ,  -0.0634],
    [-0.2774  , -0.0669 ,  -0.0242],
    [ 0.3502  , -0.1832 ,   0.0153],
    [ 0.2397  , -0.0852 ,  -0.0387],
    [ 0.2677  , -0.0254 ,   0.0668],
    [-0.1702  ,  0.0663 ,   0.0876],
    [ 0.2454  ,  0.0324 ,   0.0338],
    [ 0.1138  , -0.3321 ,  -0.0251],
    [ 0.2297  , -0.0000 ,  -0.1127],
    [-0.1673  ,  0.0053 ,  -0.0350],
    [ 0.1937  , -0.0922 ,  -0.1033],
    [ 0.4507  , -0.1178 ,   0.2034],
    [ 0.1069  ,  0.0179 ,   0.0360],
    [ 0.1494  , -0.0576 ,  -0.3018],
    [ 0.1073  , -0.0767 ,   0.1810],
    [-0.3973  , -0.0280 ,  -0.0986],
    [ 0.1653  , -0.3732 ,  -0.0033],
    [-0.1001  ,  0.1898 ,   0.0777],
    [ 0.1162  , -0.2557 ,  -0.0150],
    [-0.0766  , -0.0784 ,  -0.0240],
    [-0.1167  , -0.0550 ,   0.0794],
    [-0.1748  ,  0.1111 ,  -0.0061],
    [ 0.1380  ,  0.0945 ,   0.0153],
    [ 0.0889  ,  0.0691 ,  -0.1402],
    [-0.0889  , -0.0691 ,   0.1402],
    [-0.1535  , -0.0602 ,  -0.0389],
    [-0.3079  , -0.0024 ,  -0.1007],
    [ 0.0449  , -0.0531 ,   0.1041],
    [-0.2614  , -0.0602 ,   0.0232],
    [ 0.1194  , -0.1695 ,   0.1090],
    [ 0.0776  ,  0.0709 ,  -0.1061],
    [ 0.0295  , -0.1339 ,  -0.1206],
    [-0.0567  , -0.0630 ,   0.0828],
    [ 0.4102  ,  0.0943 ,   0.0750],
    [ 0.0500  ,  0.2701 ,   0.0612],
    [ 0.1393  ,  0.1046 ,  -0.0205],
    [-0.1526  ,  0.0005 ,   0.0554],
    [ 0.0930  ,  0.0447 ,  -0.0675],
    [ 0.0912  ,  0.0803 ,   0.1198],
    [ 0.0317  ,  0.1149 ,  -0.0351],
    [-0.1897  , -0.0432 ,  -0.0986],
    [ 0.0598  , -0.0305 ,   0.1772],
    [-0.2068  ,  0.1124 ,  -0.2590],
    [ 0.1290  , -0.0000 ,  -0.0256],
    [-0.1069  , -0.0179 ,  -0.0360],
    [ 0.0000  ,  0.0225 ,   0.1373],
    [-0.0000  , -0.1592 ,  -0.2392],
    [-0.0731  ,  0.1442 ,  -0.0529],
    [-0.0221  , -0.0373 ,   0.0389],
    [-0.1291  , -0.0396 ,   0.0727],
    [ 0.0120  ,  0.0824 ,   0.0580],
    [-0.0359  ,  0.2366 ,   0.0418],
    [-0.3764  , -0.1353 ,  -0.0908],
    [-0.1964  , -0.0633 ,   0.0624],
    [ 0.0725  , -0.0495 ,   0.0044],
    [-0.0022  , -0.1595 ,   0.1152],
    [ 0.1673  , -0.0217 ,  -0.0191],
    [-0.1433  ,  0.0112 ,  -0.0636],
    [ 0.0766  ,  0.0784 ,   0.0240],
    [ 0.1233  ,  0.0535 ,   0.0499],
    [-0.2297  ,  0.0821 ,  -0.0525],
    [-0.0149  , -0.1330 ,   0.0040],
    [ 0.0592  ,  0.1549 ,   0.0531],
    [ 0.1148  , -0.0552 ,   0.0400],
    [-0.4102  , -0.0943 ,  -0.0750],
    [-0.1325  , -0.0206 ,   0.0378],
    [-0.1673  ,  0.0217 ,   0.0191],
    [ 0.1170  , -0.0587 ,   0.1341],
    [-0.2224  ,  0.0036 ,   0.1028],
    [ 0.1033  , -0.1265 ,   0.0730],
    [-0.0745  ,  0.1353 ,  -0.1064],
    [ 0.1162  ,  0.0626 ,  -0.0475],
    [-0.0912  , -0.0803 ,  -0.1198],
    [ 0.0726  , -0.3169 ,  -0.0754],
    [-0.0432  , -0.0890 ,  -0.0768],
    [ 0.0695  ,  0.0246 ,   0.1049],
    [ 0.1495  , -0.2119 ,   0.0013],
    [-0.0592  , -0.1549 ,  -0.0531],
    [ 0.1167  ,  0.0550 ,  -0.0794],
    [ 0.0885  , -0.0482 ,   0.1121],
    [ 0.0142  ,  0.0031 ,   0.1488],
    [ 0.0490  ,  0.2067 ,   0.0382],
    [-0.0963  ,  0.0911 ,   0.1773],
    [-0.0373  , -0.2181 ,   0.0842],
    [-0.1053  , -0.0551 ,  -0.2549],
    [-0.2089  , -0.0960 ,   0.0297],
    [-0.0377  , -0.1485 ,  -0.0647],
    [ 0.1150  ,  0.1405 ,   0.0260],
    [ 0.0000  ,  0.1592 ,   0.2392],
    [ 0.1016  , -0.1679 ,   0.0038],
    [ 0.1897  ,  0.0432 ,   0.0986],
    [ 0.2717  , -0.0526 ,   0.0758],
    [ 0.1251  , -0.0536 ,   0.0898],
    [-0.0396  , -0.0974 ,  -0.0121],
    [ 0.1526  , -0.0005 ,  -0.0554],
    [ 0.0043  ,  0.0241 ,   0.0769],
    [-0.1137  ,  0.0687 ,  -0.0553],
    [-0.3180  ,  0.2019 ,   0.1206],
    [-0.1071  , -0.1154 ,  -0.1938],
    [ 0.2282  , -0.2349 ,  -0.0081],
    [ 0.2406  , -0.2334 ,   0.0169],
    [ 0.0317  , -0.1639 ,  -0.0654],
    [-0.1016  , -0.0509 ,   0.1109],
    [-0.0005  ,  0.0313 ,   0.0619],
    [-0.0372  , -0.0639 ,   0.0086],
    [ 0.1687  , -0.0844 ,   0.1164],
    [ 0.2746  ,  0.2161 ,   0.1337],
    [-0.0317  , -0.1149 ,   0.0351],
    [ 0.0893  , -0.1536 ,   0.1069],
    [-0.2509  ,  0.1289 ,  -0.0221],
    [ 0.0088  , -0.0913 ,  -0.0678],
    [ 0.1125  ,  0.0310 ,  -0.1563],
    [-0.1847  , -0.1783 ,   0.0095],
    [-0.1380  , -0.0945 ,  -0.0153],
    [ 0.1819  ,  0.0326 ,  -0.0612],
    [-0.0084  , -0.0043 ,   0.2267],
    [-0.2371  , -0.1135 ,  -0.0387],
    [ 0.0222  ,  0.0535 ,   0.0365],
    [ 0.1470  , -0.0149 ,   0.1063],
    [ 0.0949  ,  0.0210 ,  -0.1153],
    [-0.1460  ,  0.1651 ,  -0.0074],
    [-0.2022  ,  0.1046 ,   0.0197],
    [ 0.1673  , -0.0053 ,   0.0350],
    [ 0.1115  , -0.3095 ,   0.0609],
    [ 0.0361  ,  0.1016 ,   0.0547],
    [-0.3666  , -0.1088 ,   0.0389],
    [-0.0490  , -0.2067 ,  -0.0382],
    [-0.0416  ,  0.1248 ,   0.1740],
    [-0.0452  , -0.0935 ,   0.3324],
    [ 0.0542  , -0.0984 ,  -0.2243],
    [ 0.1648  , -0.1670 ,  -0.1063],
    [-0.2746  , -0.2161 ,  -0.1337],
    [ 0.1148  , -0.0777 ,  -0.0972],
    [ 0.2524  ,  0.0389 ,   0.0113],
    [ 0.4470  ,  0.0107 ,   0.0012],
    [-0.0699  ,  0.0022 ,   0.0641],
    [-0.2080  , -0.0018 ,   0.0007],
    [-0.1284  ,  0.0753 ,  -0.0255],
    [ 0.1603  ,  0.0051 ,  -0.0652],
    [-0.1616  , -0.0083 ,  -0.0410],
    [ 0.1842  ,  0.2667 ,   0.0052],
    [ 0.1973  ,  0.0718 ,  -0.0050],
    [ 0.2243  , -0.1560 ,  -0.3093],
    [ 0.1562  ,  0.2841 ,   0.0059],
    [ 0.0452  ,  0.0935 ,  -0.3324],
    [-0.0320  , -0.0326 ,  -0.1145],
    [-0.0070  ,  0.1472 ,   0.1014],
    [-0.2565  , -0.0578 ,   0.1080],
    [-0.0791  ,  0.0002 ,   0.0265],
    [ 0.0264  ,  0.0833 ,   0.0007],
    [ 0.1452  ,  0.0836 ,  -0.0204],
    [ 0.0834  , -0.0742 ,   0.0729],
    [-0.0369  ,  0.0499 ,   0.0675],
    [ 0.1949  ,  0.0736 ,   0.0824],
    [ 0.0789  , -0.3196 ,  -0.0064],
    [-0.0679  ,  0.0750 ,  -0.0195],
    [-0.1499  ,  0.0885 ,  -0.0566],
    [ 0.0873  , -0.1595 ,   0.0549],
    [ 0.3973  ,  0.0280 ,   0.0986],
    [-0.0120  , -0.0824 ,  -0.0580],
    [-0.0893  ,  0.1536 ,  -0.1069],
    [ 0.1611  ,  0.0500 ,   0.1160],
    [-0.1452  , -0.0836 ,   0.0204],
    [-0.1213  , -0.0641 ,   0.0634],
    [ 0.2308  ,  0.0557 ,  -0.0709],
    [ 0.1001  , -0.1898 ,  -0.0777],
    [ 0.1726  , -0.1633 ,  -0.0152],
    [ 0.0043  ,  0.0715 ,  -0.0425],
    [-0.1692  ,  0.0222 ,  -0.2540],
    [-0.1726  ,  0.1633 ,   0.0152],
    [ 0.1049  , -0.2156 ,  -0.0185],
    [ 0.0410  , -0.0941 ,   0.1939],
    [ 0.4302  , -0.0242 ,   0.0932],
    [-0.1687  ,  0.0844 ,  -0.1164],
    [-0.0247  , -0.2116 ,   0.0399],
    [ 0.1241  , -0.0682 ,  -0.0573],
    [-0.2397  ,  0.0852 ,   0.0387],
    [ 0.1818  , -0.0036 ,   0.0422],
    [-0.1117  ,  0.2334 ,  -0.0426],
    [ 0.2761  , -0.1399 ,   0.1764],
    [-0.0021  , -0.0934 ,   0.1683],
    [-0.0584  ,  0.0650 ,  -0.0963],
    [-0.1466  , -0.1903 ,  -0.1402],
    [-0.0930  , -0.0447 ,   0.0675],
    [ 0.2109  ,  0.0205 ,  -0.0282],
    [ 0.1117  ,  0.1274 ,  -0.0985],
    [ 0.0027  ,  0.1317 ,   0.0874],
    [ 0.1060  ,  0.1863 ,   0.0174],
    [-0.1470  , -0.1443 ,  -0.3455],
    [-0.2765  , -0.0278 ,   0.0893]])

    e1_ind1b_matlab = np.array([
                 0,
                 0,
                 0,
               119,
               188,
                 0,
                 0,
                61,
               152,
                 0,
                 0,
               205,
               166,
                34,
                 0,
                 0,
               150,
                24,
                 0,
                 0,
                 0,
               246,
                 0,
                18,
               126,
               216,
               242,
               135,
                 0,
                 0,
               164,
                 0,
                 0,
                14,
                 0,
                 0,
               143,
               179,
                 0,
               109,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
               160,
                50,
                 0,
                48,
               196,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
               238,
                 0,
                 0,
                 8,
               154,
               203,
               191,
                 0,
               201,
               230,
                 0,
                 0,
               243,
                 0,
                 0,
                 0,
                 0,
                 0,
               189,
                 0,
                 0,
               111,
                 0,
                 0,
               225,
                 0,
               232,
                 0,
               125,
               145,
                 0,
               180,
                91,
                90,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
               131,
                 0,
                 0,
               161,
               250,
               139,
               174,
               157,
                 0,
                40,
                 0,
                79,
                 0,
               155,
                 0,
                 0,
                 0,
               226,
                 0,
                 4,
                 0,
                 0,
                 0,
               133,
                 0,
                86,
                25,
                 0,
                 0,
               144,
                 0,
               100,
                 0,
               123,
                 0,
                28,
                 0,
                 0,
                 0,
               105,
                 0,
                 0,
                 0,
                37,
               129,
                87,
                 0,
                 0,
               193,
                 0,
                17,
                 0,
                 9,
                 0,
                62,
               113,
                 0,
               107,
                 0,
                 0,
                47,
               103,
                 0,
                 0,
                31,
                 0,
                13,
                 0,
                 0,
                 0,
                 0,
                 0,
               240,
               198,
               106,
               227,
                 0,
                 0,
                 0,
                38,
                89,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
                 5,
                76,
                 0,
                64,
                 0,
               148,
                 0,
               211,
                51,
                 0,
               173,
                 0,
                 0,
                66,
                 0,
                63,
                 0,
                12,
                 0,
                 0,
                 0,
                 0,
                 0,
               195,
                 0,
                 0,
                 0,
                 0,
                26,
               229,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0,
                82,
               117,
               175,
                 0,
               217,
                67,
                 0,
                84,
               236,
                 0,
                 0,
               233,
                 0,
                58,
                 0,
               172,
                 0,
                27,
                70,
                 0,
                 0,
                22,
                 0,
                 0,
                 0,
               104,
                 0,
                 0,
                 0,
                 0,
                 0,
                 0])

    def test_ismember_index(self):
        np.testing.assert_allclose(self.e1_ind1b_matlab-1,utilities.ismember_index(-self.e1,self.e1))

    def test_ismember_rows(self):
        np.testing.assert_allclose(self.e1_ind1b_matlab-1, utilities.ismember_rows(-self.e1,self.e1))
